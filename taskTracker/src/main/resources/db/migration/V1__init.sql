create table if not exists public.my_users
(
    id       bigint generated by default as identity
        primary key,
    email    varchar(255),
    name     varchar(255),
    password varchar(255),
    username varchar(255)
);

alter table public.my_users
    owner to postgres;

create table if not exists public.tasks
(
    time_spent     numeric(21),
    timer_active   boolean not null,
    assigned_to_id bigint
        constraint fko4evnc17ids5xnbmgxuj3li57
            references public.my_users,
    id             bigint generated by default as identity
        primary key,
    last_started   timestamp(6),
    description    varchar(255),
    status         varchar(255)
        constraint tasks_status_check
            check ((status)::text = ANY
                   ((ARRAY ['NEW'::character varying, 'IN_PROGRESS'::character varying, 'COMPLETED'::character varying, 'ON_HOLD'::character varying])::text[])),
    title          varchar(255)
);

alter table public.tasks
    owner to postgres;

create table if not exists public.comments
(
    created_at timestamp(6),
    id         bigint generated by default as identity
        primary key,
    task_id    bigint
        constraint fki7pp0331nbiwd2844kg78kfwb
            references public.tasks,
    user_id    bigint
        constraint fk2rvobl9sg1sm9xjc1iuee94n0
            references public.my_users,
    content    varchar(255)
);

alter table public.comments
    owner to postgres;

create table if not exists public.tasks_watchers
(
    task_id     bigint not null
        constraint fko6jlnpudrm8mnyt66b8tdomt2
            references public.tasks,
    watchers_id bigint not null
        constraint fkf9nrmpir203gb228betaa4dg7
            references public.my_users
);

alter table public.tasks_watchers
    owner to postgres;

create table if not exists public.user_roles
(
    user_id bigint not null
        constraint fk4qdaw74kg5s9r1yoii064uxwq
            references public.my_users,
    roles   varchar(255)
        constraint user_roles_roles_check
            check ((roles)::text = ANY ((ARRAY ['PERFORMER'::character varying, 'MANAGER'::character varying])::text[]))
);

alter table public.user_roles
    owner to postgres;

